@model  ConstructionCert

@{
    ViewBag.Title = "Manage";
}

<h2>Manage</h2>


@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserID)
    @Html.HiddenFor(model => model.RegisterTypeID)
    @Html.HiddenFor(model => model.WEBstatusID)

    <div class="form-horizontal">      
            <h4> Residence Certificate</h4>  
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model?.ConstLicenseID >0)
        {
            @Html.HiddenFor(model => model.ConstLicenseID)
        }

        <table class="table" style="width:300px;height:auto;margin-left:30px">
            <thead><b>Document Requirements</b></thead>
            <tr>
                <td>

                </td>
                <th>
                    Sr No
                </th>
                <th>
                    Document Name
                </th>
            </tr>
            @{int i = 1; }
            @foreach (var item in ViewBag.CertReq)
            {
                <tr>
                    <td></td>
                    <td>
                        @i
                    </td>
                    <td>
                        @item.CertificateName
                    </td>
                </tr>
                i++;
            }


        </table>
        <br /><br />
        <span>
            <strong><u>Please fill your form:-</u></strong>
        </span>
        <br />
        <br />
        <div class="form-group">
            <label class="control-label col-md-2">Owner Of House</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.OwnersOfHouse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OwnersOfHouse, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Owners Address</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.OwnwersAddress, 4, 43, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OwnwersAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
         <label class="control-label col-md-2">Building Type</label>          
                  <div class="col-md-10">
                @Html.EditorFor(model => model.BuildingType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BuildingType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">      
         <label  class="control-label col-md-2">Property Zone</label>             
            <div class="col-md-10">
                @Html.EditorFor(model => model.PropertyZone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PropertyZone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Sub-Division</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.SubDivision, 4, 43, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubDivision, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Survey No</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SurveyNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SurveyNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Order No</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Ref No</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RefNo, new { htmlAttributes = new {  @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RefNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Ref Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RefDate, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RefDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Reciept No</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecieptNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecieptNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Reciept Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecieptDate, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecieptDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Developer Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeveloperName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeveloperName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Developer Address</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DeveloperAddress,4,43, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeveloperAddress, "", new { @class = "text-danger" })
            </div>
        </div>
     
        @if (Model.ConstLicenseID == 0)
        {
            <div class="form-group">
                <label class="control-label col-md-2">Upload Documents</label>
                <div class="col-md-10">
                    <input class="form-control" type="file" id="UploadedFile" name="UploadedFile" />
                    <small>(Upload all your documents in zip folder)</small>
                </div>
            </div>
        }
     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ResIndex", new { rt = 26})
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/bootstrap")
}
