@model IllegalConstruction

@{
    ViewBag.Title = "Manage";
}

<h2>Manage</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserID)
    @Html.HiddenFor(model => model.RegisterTypeID)
    @Html.HiddenFor(model => model.ActionTaken)




    <div class="form-horizontal">
        @if (ViewBag.RegisterTypeID == 6)
        {
            <h4> Public Grievance</h4>
        }
        @if (ViewBag.RegisterTypeID == 4)
        {
            <h4>Illegal Construction</h4>
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model?.IllegalConID >0)
        {
            @Html.HiddenFor(model => model.IllegalConID)
        }
        <div class="form-group">
            <label class="control-label col-md-2">Name And Address Of Complaint</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameOfPr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameOfPr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @if (ViewBag.RegisterTypeID == 4)
            {
                <label class="control-label col-md-2">Name And Address of Person Doing illegal Construction</label>
            }
            else
            {
                <label class="control-label col-md-2">Name And Address of Person Doing Offence</label>
            }            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressOfPr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressOfPr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @if (ViewBag.RegisterTypeID == 6)
            {
                <label  class="control-label col-md-2">Nature of Complaint</label>
            }
           else
            {
                <label  class="control-label col-md-2"> Nature of Construction</label>
            }           
            <div class="col-md-10">
                @Html.EditorFor(model => model.NatOfCon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NatOfCon, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @if (ViewBag.RegisterTypeID == 6)
            {
                <label  class="control-label col-md-2">Occasion</label>
            }
            else
            {
                <label  class="control-label col-md-2"> Occasion Of Construction</label>
            }
            <div class="col-md-10">
                @Html.EditorFor(model => model.OccasOfCons, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OccasOfCons, "", new { @class = "text-danger" })
            </div>
        </div>
     <div class="form-group">
            @Html.LabelFor(model => model.Remarks, "Remarks", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
